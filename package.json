{
  "name": "generate-local-commit",
  "displayName": "Generate Local Commit",
  "description": "Generate commit messages locally using Ollama API",
  "publisher": "falkonps",
  "version": "1.0.7",
  "repository": {
    "type": "git",
    "url": "https://github.com/FALKONPS/generate-local-commit"
  },
  "engines": {
    "vscode": "^1.101.0"
  },
  "categories": [
    "Other",
    "SCM Providers"
  ],
  "activationEvents": [
    "onView:generate-local-commit.quickActionsView",
    "onView:generate-local-commit.historyView",
    "onCommand:generate-local-commit.generateCommitMessage",
    "onCommand:generate-local-commit.openSettings"
  ],
  "main": "./src/extension.js",
  "icon": "ollama.png",
  "contributes": {
    "commands": [
      {
        "command": "generate-local-commit.generateCommitMessage",
        "title": "Generate Commit Message using Ollama",
        "icon": {
          "light": "ollama.png",
          "dark": "ollama.png"
        }
      },
      {
        "command": "generate-local-commit.openSettings",
        "title": "Open Generate Local Commit Settings"
      },
      {
        "command": "generate-local-commit.showCommitDiff",
        "title": "Show Commit Diff"
      },
      {
        "command": "generate-local-commit.quickChangeModel",
        "title": "Quick: Change Model",
        "icon": "$(symbol-parameter)"
      },
      {
        "command": "generate-local-commit.quickChangeEndpoint",
        "title": "Quick: Change Endpoint",
        "icon": "$(server)"
      },
      {
        "command": "generate-local-commit.quickPullModel",
        "title": "Quick: Pull Model",
        "icon": "$(cloud-download)"
      },
      {
        "command": "generate-local-commit.quickListModels",
        "title": "Quick: List Models",
        "icon": "$(list-unordered)"
      },
      {
        "command": "generate-local-commit.quickSetTemperature",
        "title": "Quick: Set Temperature",
        "icon": "$(thermometer)"
      },
      {
        "command": "generate-local-commit.quickResetSettings",
        "title": "Quick: Reset Settings",
        "icon": "$(refresh)"
      },
      {
        "command": "generate-local-commit.enhanceCommitMessage",
        "title": "Enhance Git Message",
        "icon": "$(arrow-up)"
      },
      {
        "command": "generate-local-commit.reduceCommitMessage",
        "title": "Reduce Message Length",
        "icon": "$(arrow-down)"
      },
      {
        "command": "generate-local-commit.quickSetMaxTokens",
        "title": "Quick: Set Max Tokens",
        "icon": "$(symbol-numeric)"
      },
      {
        "command": "generate-local-commit.editPrompt",
        "title": "Edit Prompt Template",
        "icon": "$(edit)"
      },
      {
        "command": "generate-local-commit.resetPrompt",
        "title": "Reset Prompt to Default",
        "icon": "$(refresh)"
      },
      {
        "command": "generate-local-commit.testPrompt",
        "title": "Test Prompt",
        "icon": "$(play)"
      },
      {
        "command": "generate-local-commit.toggleMessageCleanup",
        "title": "Toggle Message Cleanup",
        "icon": "$(filter)"
      },
      {
        "command": "generate-local-commit.generatePrSummary",
        "title": "Generate PR Summary",
        "icon": "$(git-pull-request)"
      }
    ],
    "menus": {
      "scm/title": [
        {
          "when": "scmProvider == 'git'",
          "command": "generate-local-commit.generateCommitMessage",
          "group": "navigation"
        },
        {
          "when": "scmProvider == 'git'",
          "command": "generate-local-commit.enhanceCommitMessage",
          "group": "navigation"
        },
        {
          "when": "scmProvider == 'git'",
          "command": "generate-local-commit.reduceCommitMessage",
          "group": "navigation"
        },
        {
          "when": "scmProvider == 'git'",
          "command": "generate-local-commit.openSettings",
          "group": "2_configure"
        }
      ],
      "commandPalette": [
        {
          "command": "generate-local-commit.generateCommitMessage",
          "when": "workbenchState != empty"
        },
        {
          "command": "generate-local-commit.openSettings"
        },
        {
          "command": "generate-local-commit.quickChangeModel"
        },
        {
          "command": "generate-local-commit.quickChangeEndpoint"
        },
        {
          "command": "generate-local-commit.quickPullModel"
        },
        {
          "command": "generate-local-commit.quickListModels"
        },
        {
          "command": "generate-local-commit.quickSetTemperature"
        },
        {
          "command": "generate-local-commit.quickResetSettings"
        },
        {
          "command": "generate-local-commit.enhanceCommitMessage"
        },
        {
          "command": "generate-local-commit.reduceCommitMessage"
        },
        {
          "command": "generate-local-commit.quickSetMaxTokens"
        },
        {
          "command": "generate-local-commit.editPrompt"
        },
        {
          "command": "generate-local-commit.resetPrompt"
        },
        {
          "command": "generate-local-commit.testPrompt"
        },
        {
          "command": "generate-local-commit.toggleMessageCleanup"
        },
        {
          "command": "generate-local-commit.generatePrSummary"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "generate-local-commit",
          "title": "Generate Local Commit",
          "icon": "$(git-commit)"
        }
      ]
    },
    "views": {
      "generate-local-commit": [
        {
          "id": "generate-local-commit.quickActionsView",
          "name": "Quick Actions"
        },
        {
          "id": "generate-local-commit.promptManagementView",
          "name": "Prompt Templates"
        },
        {
          "id": "generate-local-commit.historyView",
          "name": "Recent Commits"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "generate-local-commit.quickActionsView",
        "contents": "Quick actions for Generate Local Commit.\n[Open Settings](command:generate-local-commit.openSettings)",
        "when": "workbenchState == empty"
      }
    ],
    "configuration": {
      "title": "Generate Local Commit",
      "properties": {
        "generate-local-commit.endpoint": {
          "type": "string",
          "default": "http://localhost:11434",
          "description": "Ollama API endpoint URL"
        },
        "generate-local-commit.model": {
          "type": "string",
          "default": "qwen2.5:3b",
          "description": "Ollama model to use for generating commit messages"
        },
        "generate-local-commit.maxTokens": {
          "type": "number",
          "default": 300,
          "description": "Maximum number of tokens to generate"
        },
        "generate-local-commit.temperature": {
          "type": "number",
          "default": 0.2,
          "minimum": 0,
          "maximum": 2,
          "description": "Temperature for text generation (higher means more creative, lower means more deterministic)"
        },
        "generate-local-commit.contextRange": {
          "type": "number",
          "default": 3,
          "minimum": 0,
          "maximum": 100,
          "description": "Number of context lines to include above and below each change in the diff"
        },
        "generate-local-commit.promptTemplate": {
          "type": "string",
          "description": "Template for the prompt sent to Ollama. IMPORTANT: Must contain '${diff}' placeholder which will be replaced with the actual diff."
        },
        "generate-local-commit.useConventionalCommits": {
          "type": "boolean",
          "default": true,
          "description": "Follow conventional commits format (e.g., feat:, fix:, docs:)"
        },
        "generate-local-commit.showDiffConfirmation": {
          "type": "boolean",
          "default": false,
          "description": "Show a confirmation dialog with the diff before generating the commit message"
        },
        "generate-local-commit.enhancePrompt": {
          "type": "string",
          "description": "Template for the prompt sent to Ollama to enhance commit messages. IMPORTANT: Must contain '${message}' placeholder which will be replaced with the actual commit message."
        },
        "generate-local-commit.reducePrompt": {
          "type": "string",
          "description": "Template for the prompt sent to Ollama to reduce commit message length. IMPORTANT: Must contain '${message}' placeholder which will be replaced with the actual commit message."
        },
        "generate-local-commit.enableMessageCleanup": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic cleanup of AI responses (removes thinking tags, markdown artifacts, and normalizes whitespace). When disabled, raw AI output is used as-is."
        },
        "generate-local-commit.prSummaryPrompt": {
          "type": "string",
          "description": "Template for the prompt sent to Ollama to generate PR summaries from commit messages. IMPORTANT: Must contain '${commits}' placeholder which will be replaced with the actual commit messages."
        }
      }
    }
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "vscode-test",
    "package": "vsce package"
  },
  "devDependencies": {
    "@types/vscode": "^1.101.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.0.10",
    "eslint": "^9.30.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.0"
  },
  "dependencies": {
    "axios": "^1.10.0"
  },
  "license": "MIT"
}
