{
  "name": "git-commit-local",
  "displayName": "Git Commit Local",
  "description": "Generate commit messages locally using Ollama API",
  "publisher": "falkonps",
  "version": "1.0.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/FALKONPS/git-commit-local"
  },
  "engines": {
    "vscode": "^1.98.0"
  },
  "categories": [
    "Other",
    "SCM Providers"
  ],
  "activationEvents": [
    "onView:git-commit-local.quickActionsView",
    "onView:git-commit-local.historyView",
    "onCommand:git-commit-local.generateCommitMessage",
    "onCommand:git-commit-local.openSettings"
  ],
  "main": "./src/extension.js",
  "icon": "ollama.png",
  "contributes": {
    "commands": [
      {
        "command": "git-commit-local.generateCommitMessage",
        "title": "Generate Commit Message using Ollama",
        "icon": {
          "light": "ollama.png",
          "dark": "ollama.png"
        }
      },
      {
        "command": "git-commit-local.openSettings",
        "title": "Open Git Commit Local Settings"
      },
      {
        "command": "git-commit-local.showCommitDiff",
        "title": "Show Commit Diff"
      },
      {
        "command": "git-commit-local.quickChangeModel",
        "title": "Quick: Change Model",
        "icon": "$(symbol-parameter)"
      },
      {
        "command": "git-commit-local.quickChangeEndpoint",
        "title": "Quick: Change Endpoint",
        "icon": "$(server)"
      },
      {
        "command": "git-commit-local.quickPullModel",
        "title": "Quick: Pull Model",
        "icon": "$(cloud-download)"
      },
      {
        "command": "git-commit-local.quickListModels",
        "title": "Quick: List Models",
        "icon": "$(list-unordered)"
      },
      {
        "command": "git-commit-local.quickSetTemperature",
        "title": "Quick: Set Temperature",
        "icon": "$(thermometer)"
      },
      {
        "command": "git-commit-local.quickResetSettings",
        "title": "Quick: Reset Settings",
        "icon": "$(refresh)"
      }
    ],
    "menus": {
      "scm/title": [
        {
          "when": "scmProvider == 'git'",
          "command": "git-commit-local.generateCommitMessage",
          "group": "navigation"
        },
        {
          "when": "scmProvider == 'git'",
          "command": "git-commit-local.openSettings",
          "group": "2_configure"
        }
      ],
      "commandPalette": [
        {
          "command": "git-commit-local.generateCommitMessage",
          "when": "workbenchState != empty"
        },
        {
          "command": "git-commit-local.openSettings"
        },
        {
          "command": "git-commit-local.quickChangeModel"
        },
        {
          "command": "git-commit-local.quickChangeEndpoint"
        },
        {
          "command": "git-commit-local.quickPullModel"
        },
        {
          "command": "git-commit-local.quickListModels"
        },
        {
          "command": "git-commit-local.quickSetTemperature"
        },
        {
          "command": "git-commit-local.quickResetSettings"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "git-commit-local",
          "title": "Git Commit Local",
          "icon": "$(git-commit)"
        }
      ]
    },
    "views": {
      "git-commit-local": [
        {
          "id": "git-commit-local.quickActionsView",
          "name": "Quick Actions"
        },
        {
          "id": "git-commit-local.historyView",
          "name": "Recent Commits"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "git-commit-local.quickActionsView",
        "contents": "Quick actions for Git Commit Local.\n[Open Settings](command:git-commit-local.openSettings)",
        "when": "workbenchState == empty"
      }
    ],
    "configuration": {
      "title": "Git Commit Local",
      "properties": {
        "git-commit-local.endpoint": {
          "type": "string",
          "default": "http://localhost:11434",
          "description": "Ollama API endpoint URL"
        },
        "git-commit-local.model": {
          "type": "string",
          "default": "qwen2.5:3b",
          "description": "Ollama model to use for generating commit messages"
        },
        "git-commit-local.maxTokens": {
          "type": "number",
          "default": 300,
          "description": "Maximum number of tokens to generate"
        },
        "git-commit-local.temperature": {
          "type": "number",
          "default": 0.2,
          "minimum": 0,
          "maximum": 2,
          "description": "Temperature for text generation (higher means more creative, lower means more deterministic)"
        },
        "git-commit-local.contextRange": {
          "type": "number",
          "default": 3,
          "minimum": 0,
          "maximum": 100,
          "description": "Number of context lines to include above and below each change in the diff"
        },
        "git-commit-local.promptTemplate": {
          "type": "string",
          "default": "You are an AI assistant specialized in creating concise and meaningful git commit messages. When provided with a git diff, your task is to generate a clear commit message following the conventional commit format.\n\nYour commit messages should:\n1. Follow the pattern: type(optional scope): description\n2. Use one of these types: feat, fix, docs, style, refactor, perf, test, build, ci, chore\n3. Focus on WHAT changed and WHY, not HOW it was implemented\n4. Be under 50 characters whenever possible\n5. Use imperative, present tense (e.g., \"add feature\" not \"added feature\")\n6. Generate the git commit message inside [COMMIT][/COMMIT] tags based on the content of the diff provided inside [DIFF][/DIFF] tags\n\nTypes explained:\n- feat: A new feature or significant enhancement\n- fix: A bug fix\n- docs: Documentation changes only\n- style: Changes that don't affect code meaning (formatting, whitespace)\n- refactor: Code changes that neither fix bugs nor add features\n- perf: Performance improvements\n- test: Adding or correcting tests\n- build: Changes to build system or dependencies\n- ci: Changes to CI configuration/scripts\n- chore: Routine maintenance tasks, dependency updates\n\n[DIFF]${diff}[/DIFF]",
          "description": "Template for the prompt sent to Ollama. IMPORTANT: Must contain '${diff}' placeholder which will be replaced with the actual diff."
        },
        "git-commit-local.useConventionalCommits": {
          "type": "boolean",
          "default": true,
          "description": "Follow conventional commits format (e.g., feat:, fix:, docs:)"
        },
        "git-commit-local.showDiffConfirmation": {
          "type": "boolean",
          "default": false,
          "description": "Show a confirmation dialog with the diff before generating the commit message"
        }
      }
    }
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "vscode-test",
    "package": "vsce package"
  },
  "devDependencies": {
    "@types/vscode": "^1.98.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "eslint": "^9.21.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^2.15.0"
  },
  "dependencies": {
    "axios": "^1.8.3"
  },
  "license": "MIT"
}
